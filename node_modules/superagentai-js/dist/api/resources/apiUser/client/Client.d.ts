/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as SuperAgent from "../../..";
export declare namespace ApiUser {
    interface Options {
        environment?: core.Supplier<environments.SuperAgentEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class ApiUser {
    protected readonly _options: ApiUser.Options;
    constructor(_options: ApiUser.Options);
    /**
     * Create a new API user
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    create(request: SuperAgent.AppModelsRequestApiUser): Promise<SuperAgent.AppModelsResponseApiUser>;
    /**
     * Get a single api user
     */
    get(): Promise<SuperAgent.AppModelsResponseApiUser>;
    /**
     * Delete an api user
     */
    delete(): Promise<unknown>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
