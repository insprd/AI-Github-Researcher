/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as SuperAgent from "../../..";
export declare namespace Workflow {
    interface Options {
        environment?: core.Supplier<environments.SuperAgentEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class Workflow {
    protected readonly _options: Workflow.Options;
    constructor(_options: Workflow.Options);
    /**
     * List all workflows
     */
    list(): Promise<SuperAgent.WorkflowList>;
    /**
     * Create a new workflow
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    create(request: SuperAgent.AppModelsRequestWorkflow): Promise<SuperAgent.AppModelsResponseWorkflow>;
    /**
     * Get a single workflow
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    get(workflowId: string): Promise<SuperAgent.AppModelsResponseWorkflow>;
    /**
     * Patch a workflow
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    update(workflowId: string, request: SuperAgent.AppModelsRequestWorkflow): Promise<SuperAgent.AppModelsResponseWorkflow>;
    /**
     * Delete a specific workflow
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    delete(workflowId: string): Promise<unknown>;
    /**
     * Invoke a specific workflow
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    invoke(workflowId: string, request: SuperAgent.WorkflowInvoke): Promise<unknown>;
    /**
     * List all steps of a workflow
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    listSteps(workflowId: string): Promise<SuperAgent.WorkflowList>;
    /**
     * Create a new workflow step
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    addStep(workflowId: string, request: SuperAgent.AppModelsRequestWorkflowStep): Promise<SuperAgent.AppModelsResponseWorkflow>;
    /**
     * Delete a specific workflow step
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    deleteStep(workflowId: string, stepId: string): Promise<unknown>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
